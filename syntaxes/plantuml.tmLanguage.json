{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "PlantUML",
  "scopeName": "source.plantuml",
  "patterns": [
    { "include": "#diagrams" }
  ],
  "repository": {
    "diagrams": {
      "begin": "(?i)^\\s*@start(uml|salt|json|yaml|wbs|mindmap|gantt|nwdiag|state|class|sequence|component|object|deployment)",
      "end": "(?i)^\\s*@end(uml|salt|json|yaml|wbs|mindmap|gantt|nwdiag|state|class|sequence|component|object|deployment)",
      "beginCaptures": {
        "1": { "name": "keyword.control.diagram.begin.plantuml" }
      },
      "endCaptures": {
        "1": { "name": "keyword.control.diagram.end.plantuml" }
      },
      "name": "meta.diagram.plantuml",
      "patterns": [
        { "include": "#comments" },
        { "include": "#strings" },
        { "include": "#preprocessor" },
        { "include": "#stereotypes" },
        { "include": "#skinparam_and_style" },
        { "include": "#notes" },
        { "include": "#relationships" },
        { "include": "#declarations" },
        { "include": "#keywords" },
        { "include": "#creole_html" }
      ]
    },

    "comments": {
      "patterns": [
        { "name": "comment.line.apostrophe.plantuml", "match": "^\\s*'.*$" },
        { "name": "comment.block.plantuml", "begin": "/'", "end": "'/" }
      ]
    },

    "strings": {
      "patterns": [
        { "name": "string.quoted.double.plantuml", "begin": "\"", "end": "\"" }
      ]
    },

    "stereotypes": {
      "patterns": [
        {
          "name": "entity.other.stereotype.plantuml",
          "begin": "<<",
          "end": ">>",
          "beginCaptures": { "0": { "name": "punctuation.definition.stereotype.begin.plantuml" }},
          "endCaptures": { "0": { "name": "punctuation.definition.stereotype.end.plantuml" }},
          "contentName": "entity.name.stereotype.content.plantuml"
        }
      ]
    },

    "relationships": {
      "comment": "Catches source, cardinality, arrow, target, cardinality, and label.",
      "match": "^\\s*(\"[^\"]+\"|[\\w_]+)(\\s*\"[\\w.*\\/]+\")?\\s*(<\\|-|-\\|>|[ox*#]?(<\\|)?(?:[.=~-]){1,4}(?:\\w+)?(?:[.=~-]*)?(\\|>)?[>ox*#]?)\\s+(\"[^\"]+\"|[\\w_]+)(\\s*\"[\\w.*\\/]+\")?(\\s*:\\s*(.*))?$",
      "captures": {
        "1": { "name": "variable.language.entity.source.plantuml" },
        "2": { "name": "string.quoted.double.cardinality.plantuml" },
        "3": { "name": "keyword.operator.relation.plantuml" },
        "6": { "name": "variable.language.entity.target.plantuml" },
        "7": { "name": "string.quoted.double.cardinality.plantuml" },
        "8": { "name": "meta.relation.label.plantuml" },
        "9": { "name": "string.unquoted.label.plantuml" }
      }
    },

    "declarations": {
      "comment": "Matches declarations for classes, objects, etc.",
      "patterns": [
        {
          "match": "^\\s*(abstract|actor|participant|class|interface|enum|component|package|node|state|object|database|boundary|control|entity|card|cloud|artifact|folder|frame|storage)\\b(?:\\s+(\"[^\"]*\"|\\w+))?(?:\\s+(as)\\s+(\\w+))?((?:\\s*<<.*?>>)*)?(?:\\s*(#\\w+))?",
          "captures": {
            "1": { "name": "storage.type.declaration.plantuml" },
            "2": { "name": "entity.name.declaration.plantuml" },
            "3": { "name": "keyword.control.as.plantuml" },
            "4": { "name": "variable.language.alias.plantuml" },
            "5": { "patterns": [ { "include": "#stereotypes" } ] },
            "6": { "name": "support.constant.color.plantuml" }
          }
        }
      ]
    },

    "keywords": {
      "patterns": [
        {
          "match": "(?i)^\\s*(title|caption|header|footer|legend)(?!\\s*:)(\\s+.*)?$",
          "captures": {
            "1": { "name": "keyword.other.plantuml" },
            "2": { "name": "string.unquoted.plantuml" }
          }
        },
        {
          "name": "keyword.control.plantuml",
          "match": "(?i)^\\s*(autonumber|newpage|alt|else|elseif|opt|loop|par|break|critical|group|box|if|then|endif|fork|repeat|while|endwhile|case|when|start|stop|end|kill|detach|endlegend|partition|left to right direction|top to bottom direction)\\b"
        },
        {
          "name": "keyword.other.plantuml",
          "match": "(?i)^\\s*(hide|show|remove|scale|sprite|namespace|allow_mixing|!pragma|!theme)\\b"
        },
        {
          "name": "storage.modifier.plantuml",
          "match": "\\{(static|abstract|classifier)\\}"
        }
      ]
    },

    "preprocessor": {
      "match": "^\\s*!\\w+",
      "name": "keyword.control.preprocessor.plantuml"
    },

    "skinparam_and_style": {
      "patterns": [
        {
          "name": "keyword.other.skinparam.plantuml",
          "match": "(?i)^\\s*skinparam\\b.*$"
        },
        {
          "name": "meta.style.block.plantuml",
          "begin": "(?i)^\\s*(<style>)",
          "end": "(?i)^\\s*(</style>)",
          "beginCaptures": { "1": { "name": "keyword.control.style.plantuml" } },
          "endCaptures": { "1": { "name": "keyword.control.style.plantuml" } }
        }
      ]
    },

    "notes": {
      "begin": "(?i)^\\s*((?:r|h)?note(?:\\s+(left|right|top|bottom))?(?:\\s+(?:of|over|on|as))?)",
      "end": "(?i)^\\s*end\\s*(r?h?note)|(?=^\\s*@end)|(?=^\\s*[\\w\"']+\\s*--)",
      "beginCaptures": { "1": { "name": "keyword.other.note.plantuml" } },
      "endCaptures": { "0": { "name": "keyword.other.note.plantuml" } },
      "name": "comment.block.note.plantuml"
    },

    "creole_html": {
        "patterns": [
            { "name": "markup.bold.creole.plantuml", "match": "(\\*\\*).*?(\\*\\*)"},
            { "name": "markup.italic.creole.plantuml", "match": "(//).*?(//)"},
            { "name": "entity.name.tag.html.plantuml", "match": "</?\\w+.*?>" }
        ]
    }
  }
}
